summarise(avg_price = mean(price, na.rm=TRUE))  %>%
arrange(desc(avg_price))
bcn %>%
group_by(neighbourhood_group_cleansed) %>%
tally(sort = TRUE) # count observation by neighborhood
ggplot(data=bcn, aes(review_scores_rating)) +
geom_histogram(breaks=seq(0,100, by=2), col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(bcn$review_scores_rating, na.rm = TRUE)),
col="red", linetype="dashed", size =1) +
labs(title = "Histogramm of Overall Rating") +
labs(x="Rating", y="Count")
bcn$price.cut <- cut(bcn$price, c(seq(0,200,1), Inf))
mu <- ddply(bcn, "review.f", summarise, grp.mean=mean(price, na.rm = TRUE))
ggplot(bcn, aes(x=as.numeric(price.cut), color=review.f)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=review.f),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
ggplot(bcn, aes(x=as.numeric(price.cut), color=time.d)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=review.f),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
bcn$time.f <- as.factor(bcn$time.d)
ggplot(bcn, aes(x=as.numeric(price.cut), color=time.f)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=review.f),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
ggplot(bcn, aes(x=as.numeric(price.cut), color=time.f)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=time.f),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
mu <- ddply(bcn, "time.f", summarise, grp.mean=mean(price, na.rm = TRUE))
head(mu)
ggplot(bcn, aes(x=as.numeric(price.cut), color=time.f)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=time.f),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
mu1 <- ddply(bcn, "review.f", summarise, grp.mean=mean(accept_rate, na.rm = TRUE))
head(mu1)
ggplot(bcn, aes(x=accept_rate, color=review.f)) +
geom_histogram(fill="white", position="dodge")+
geom_vline(data=mu1, aes(xintercept=grp.mean, color=review.f),
linetype="dashed")+
labs(title = "Histogramm of Acceptance rate") +
labs(x="Acceptance Rate", y="Count")
bcn$instant_bookable <-ifelse(bcn$instant_bookable=="t",1,0)
bcn$superhost<-ifelse(bcn$host_is_superhost=="t",1,0)
bcn$cleaning_fee <- as.numeric(gsub("\\$","",bcn$cleaning_fee))
bcn$cleaning_fee[is.na(bcn$cleaning_fee)]<-0
unique(bcn$cleaning_fee)
bcn$response_rate <- as.numeric(gsub("\\%","",bcn$host_response_rate))
bcn$date <- Sys.Date() #gen Variable with current date
bcn$host_since_new <- as.numeric(difftime(bcn$date, bcn$host_since, units = "w"))
ggplot(data=bcn, aes(host_since_new)) +
geom_histogram(binwidth = 10, col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(bcn$host_since_new, na.rm = TRUE)),
col="red", linetype="dashed", size =1) +
labs(title = "Histogramm Host Since") +
labs(x="Host Weeks", y="Count")
bcn$property_type1 <- as.numeric(as.factor(bcn$property_type))
bcn$room_type1 <- as.numeric(as.factor(bcn$room_type))
bcn$hood.d <- as.numeric(bcn$hood)
bcn %>%
group_by(has_availability) %>%
tally(sort =TRUE)
bcn %>%
group_by(id) %>%
arrange(n)
bcn %>%
group_by(id) %>%
arrange()
bcn %>%
group_by(id) %>%
arrange()
bcn %>%
group_by(id) %>%
tally(sort = TRUE)
bcn%>%
group_by(time.d, review.d) %>%
summarise(n=n())  %>%
arrange(desc(n))
rm(list = ls())
barcelona1 <- read_csv("~/GD/HSU/Paper/Airbnb/data/Inside Airbnb/BCN/listings_bcn5.csv")
barcelona1 <- barcelona1[which(barcelona1$number_of_reviews < 4),]
barcelona2 <- read_csv("~/GD/HSU/Paper/Airbnb/data/Inside Airbnb/BCN/listings_bcn2.csv")
bcn <- bind_rows(barcelona1, barcelona2, .id = "sample_id")
bcn$price <- as.numeric(gsub("\\$","",bcn$price))
bcn$accept_rate <- as.numeric(gsub("\\%","",bcn$host_acceptance_rate))
bcn$review.d <- ifelse(bcn$number_of_reviews > 3, 1,0)
bcn$review.f <- factor(bcn$review.d, labels = c("No Rating", "Rating"))
bcn$time.d <- ifelse(bcn$last_scraped=="2016-01-03" | bcn$last_scraped=="2016-01-04",1,0)
bcn$time.f <- as.factor(bcn$time.d)
bcn %>%
group_by(time.d, review.d) %>%
tally(sort=TRUE)
bcn <- bcn[ ave(1:nrow(bcn), bcn$id, FUN=length) > 1 , ]
bcn%>%
group_by(time.d, review.d) %>%
summarise(n=n())  %>%
arrange(desc(n))
bcn$treated <- ifelse(bcn$review.d == 1)
bcn$treated <- ifelse(bcn$review.d == 1,1,0)
bcn %>%
group_by(id, treated) %<%
tally(sort = TRUE)
bcn %>%
group_by(id, treated) %<%
tally(sort = TRUE)
bcn %>%
group_by(id, treated) %>%
tally(sort = TRUE)
rm(list = ls())
airbnb <- load("/Users/Franzi/GD/HSU/Paper/Airbnb/apis/hamburg_emo_gen_race_dist.Rda")
hamburg <- hamburg[which(hamburg$deleted == 0),]
hamburg <- hamburg[which(hamburg$reviews > 3),]
hamburg %>%
group_by(accommodates) %>%
tally(sort = TRUE)
hamburg<-hamburg[which(hamburg$accommodates<7),]
hamburg <- hamburg[which(hamburg$nightly_price<1000),]
hamburg$distance_km <- hamburg$distance/1000
hamburg$instant_book.f <-factor(hamburg$instant_book)
hamburg$instant_book.d <-ifelse(hamburg$instant_book=="true",1,0)
hamburg$superhost.d<-ifelse(hamburg$superhost=="true",1,0)
hamburg$gender.d <- ifelse(hamburg$gender == "male",1,0)
hamburg$happiness.d <- ifelse(hamburg$happiness>.7,1,0)
hamburg$cleaning_fee[is.na(hamburg$cleaning_fee)]<-0 # Fill NA
hamburg$cleaning_fee.d<-ifelse(hamburg$cleaning_fee>0, 1,0) #Gen Dummy
hamburg$couple<-ifelse(str_count(hamburg$hostname, "&") | str_count(hamburg$hostname, "\\+") | str_count(hamburg$hostname, "und") | str_count(hamburg$hostname, "Und") | str_count(hamburg$hostname, ","),1,0)
hamburg$couple<-ifelse(hamburg$hostname=="Gundula" | hamburg$hostname=="Gunda" | hamburg$hostname=="Edmund", 0,hamburg$couple)
hamburg$coupleAND <- ifelse(str_count(hamburg$hostname, "and") | str_count(hamburg$hostname, "And"),1,0)
hamburg$couple<-ifelse(hamburg$hostname=="Fenja  And Katharina" | hamburg$hostname=="Claudia And Detlev" | hamburg$hostname=="Neele And Behruz" | hamburg$hostname=="Nicole And Michael", 1,hamburg$couple)
hamburg$hostname[which(hamburg$couple==1)]
hamburg$name.arab <- ifelse(str_count(hamburg$name.usage,"tur") | str_count(hamburg$name.usage,"ara"),1,0 )
hamburg$name.arab <- ifelse(str_count(hamburg$hostname, "Sarah"),0, hamburg$name.arab)
hamburg$hostname[which(hamburg$name.arab==1)]
hamburg$property_type.n <- as.numeric(as.factor(hamburg$property_type))
hamburg$room_type.n <- as.numeric(as.factor(hamburg$room_type))
hamburg$district.n <- as.numeric(as.factor(hamburg$district))
hamburg$log_pice = log10(hamburg$nightly_price)
hamburg$distance.cut <- cut(hamburg$distance_km, c(seq(0,15,1), Inf))
ggplot(data=hamburg, aes(as.numeric(distance.cut))) +
geom_histogram(binwidth = 1, col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(hamburg$distance_km, na.rm = TRUE)), col="red", linetype="dashed", size =1) +
labs(title = "Histogramm of Distance to City Center") +
labs(x="Distance to City Center in km", y="Count") +
scale_x_continuous(breaks = 0:16, labels = c(seq(0,15,1),">15"))
X1 <- cbind(hamburg$overall_satisfaction, hamburg$reviews, hamburg$superhost.d, hamburg$pic_count)
colnames(X1) <- c("Average Rating Score", "Number of Reviews", "Superhost Badge", "Number of Photos")
X2 <-cbind(hamburg$accommodates, hamburg$room_type.n, hamburg$district.n, hamburg$distance_km)
colnames(X2) <- c("Number of Guests", "room Type", "Hood", "Distance to city Center")
X3 <-cbind(hamburg$gender.d, hamburg$name.arab, hamburg$couple, hamburg$happiness.d)
colnames(X3) <- c("Gender", "Arab Name", "Couple", "Happiness")
X4 <-cbind(hamburg$instant_book.d, hamburg$cleaning_fee.d, hamburg$cancel_policy, hamburg$minstay, hamburg$response_rate, hamburg$response_time)
colnames(X4) <- c("Instant Booking", "Cleaning Fee", "Cancel Policy", "Minimum Stay", "Response Rate", "Response Time")
Y <- hamburg$log_pice
Y1 <- hamburg$nightly_price
ols1 <- lm(Y ~ X1 + X2 + X3 + X4)
summary(ols1)
library(readr)
library(plyr)
library(dplyr)
library("stargazer")
library(stringr)
library(ggplot2)
barcelona1 <- read_csv("~/GD/HSU/Paper/Airbnb/data/Inside Airbnb/BCN/listings_bcn5.csv")
barcelona1 <- barcelona1[which(barcelona1$number_of_reviews < 4),]
barcelona2 <- read_csv("~/GD/HSU/Paper/Airbnb/data/Inside Airbnb/BCN/listings_bcn2.csv")
bcn <- bind_rows(barcelona1, barcelona2, .id = "sample_id")
bcn$review.d <- ifelse(bcn$number_of_reviews > 3, 1,0)
bcn$review.f <- factor(bcn$review.d, labels = c("No Rating", "Rating"))
bcn$time.d <- ifelse(bcn$last_scraped=="2016-01-03" | bcn$last_scraped=="2016-01-04",1,0)
bcn$time.f <- as.factor(bcn$time.d)
bcn <- bcn[ ave(1:nrow(bcn), bcn$id, FUN=length) > 1 , ]
bcn%>%
group_by(time.d, review.d) %>%
summarise(n=n())  %>%
arrange(desc(n))
1478+1420
install.packages("pln")
install.packages("plm")
library(plm)
bcn.panel <- plm.data(bcn, index=c("id","time.d"))
View(bcn.panel)
bcn$treated <- ifelse(bcn$review.d == 1,1,0)
bcn$treated <- ifelse(bcn$review.d == 1,1,0)
bcn.panel <- plm.data(bcn, index=c("id","time.d"))
bcn.panel%>%
glimpse(time.d, review.d, treated)
bcn%>%
group_by(time.d, review.d) %>%
summarise(n=n())  %>%
arrange(desc(n))
bcn%>%
glimpse(time.d, review.d, treated)
glimpse(bcn$time.d, bcn$review.d, bcn$treated)
rm(list = ls())
library(readr)
library(plyr)
library(dplyr)
library("stargazer")
library(stringr)
library(ggplot2)
airbnb <- load("/Users/Franzi/GD/HSU/Paper/Airbnb/apis/hamburg_emo_gen_race_dist.Rda")
hamburg <- hamburg[which(hamburg$deleted == 0),]
hamburg <- hamburg[which(hamburg$reviews > 3),]
hamburg<-hamburg[which(hamburg$accommodates<7),]
hamburg <- hamburg[which(hamburg$property_type=="Wohnung" | hamburg$property_type=="Haus" | hamburg$property_type=="Loft" | hamburg$property_type=="Boot" | hamburg$property_type=="Reihenhaus"| hamburg$property_type=="Wohnwagen/Wohnmobil" | hamburg$property_type=="Villa"),]
hamburg <- hamburg[which(hamburg$nightly_price<1000),]
hamburg$distance_km <- hamburg$distance/1000
hamburg$instant_book.f <-factor(hamburg$instant_book)
hamburg$instant_book.d <-ifelse(hamburg$instant_book=="true",1,0)
hamburg$superhost.d<-ifelse(hamburg$superhost=="true",1,0)
hamburg$gender.d <- ifelse(hamburg$gender == "male",1,0)
hamburg$happiness.d <- ifelse(hamburg$happiness>.7,1,0)
hamburg$cleaning_fee[is.na(hamburg$cleaning_fee)]<-0 # Fill NA
hamburg$cleaning_fee.d<-ifelse(hamburg$cleaning_fee>0, 1,0) #Gen Dummy
hamburg$couple<-ifelse(str_count(hamburg$hostname, "&") | str_count(hamburg$hostname, "\\+") | str_count(hamburg$hostname, "und") | str_count(hamburg$hostname, "Und") | str_count(hamburg$hostname, ","),1,0)
hamburg$couple<-ifelse(hamburg$hostname=="Gundula" | hamburg$hostname=="Gunda" | hamburg$hostname=="Edmund", 0,hamburg$couple)
hamburg$hostname[which(hamburg$couple==1)]
hamburg$coupleAND <- ifelse(str_count(hamburg$hostname, "and") | str_count(hamburg$hostname, "And"),1,0)
hamburg$hostname[which(hamburg$coupleAND==1)]
hamburg$couple<-ifelse(hamburg$hostname=="Fenja  And Katharina" | hamburg$hostname=="Claudia And Detlev" | hamburg$hostname=="Neele And Behruz" | hamburg$hostname=="Nicole And Michael", 1,hamburg$couple)
hamburg$hostname[which(hamburg$couple==1)]
hamburg$name.arab <- ifelse(str_count(hamburg$name.usage,"tur") | str_count(hamburg$name.usage,"ara"),1,0 )
hamburg$name.arab <- ifelse(str_count(hamburg$hostname, "Sarah"),0, hamburg$name.arab)
hamburg$hostname[which(hamburg$name.arab==1)]
hamburg$property_type.n <- as.numeric(as.factor(hamburg$property_type))
hamburg$room_type.n <- as.numeric(as.factor(hamburg$room_type))
hamburg$district.n <- as.numeric(as.factor(hamburg$district))
hamburg$log_pice = log10(hamburg$nightly_price)
hamburg$review.cut <- cut(hamburg$reviews, c(seq(0,50,1), Inf))
ggplot(hamburg, aes(as.numeric(review.cut))) +
geom_histogram(binwidth = 1, col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(hamburg$reviews, na.rm = TRUE)), col="red", linetype="dashed", size =1) +
labs(title = "Histogramm of Review Count") +
labs(x="Reviews", y="Count") +
scale_x_continuous(breaks = seq(0,51,10), labels = c(seq(0,49,10), ">50"))
hamburg$price.cut <- cut(hamburg$nightly_price, c(seq(0,200,1), Inf))
ggplot(hamburg, aes(as.numeric(price.cut))) +
#geom_histogram()
geom_histogram(binwidth = 5, col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(hamburg$nightly_price, na.rm = TRUE)), col="red", linetype="dashed", size =1) +
labs(title = "Histogramm of Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
hamburg$distance.cut <- cut(hamburg$distance_km, c(seq(0,15,1), Inf))
ggplot(data=hamburg, aes(as.numeric(distance.cut))) +
geom_histogram(binwidth = 1, col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(hamburg$distance_km, na.rm = TRUE)), col="red", linetype="dashed", size =1) +
labs(title = "Histogramm of Distance to City Center") +
labs(x="Distance to City Center in km", y="Count") +
scale_x_continuous(breaks = 0:16, labels = c(seq(0,15,1),">15"))
unique(hamburg$city)
unique(hamburg$address)
hamburg %>%
group_by(city)%>%
tally(sort =TRUE)
library(readr)
library(plyr)
library(dplyr)
library("stargazer")
library(stringr)
library(plm)
library(ggplot2)
library(ggmap)
barcelona1 <- read_csv("~/GD/HSU/Paper/Airbnb/data/Inside Airbnb/BCN/listings_bcn5.csv")
barcelona1 <- barcelona1[which(barcelona1$number_of_reviews < 4),]
barcelona2 <- read_csv("~/GD/HSU/Paper/Airbnb/data/Inside Airbnb/BCN/listings_bcn2.csv")
bcn <- bind_rows(barcelona1, barcelona2, .id = "sample_id")
bcn$review.d <- ifelse(bcn$number_of_reviews > 3, 1,0)
bcn$review.f <- factor(bcn$review.d, labels = c("No Rating", "Rating"))
bcn$time.d <- ifelse(bcn$last_scraped=="2016-01-03" | bcn$last_scraped=="2016-01-04",1,0)
bcn$time.f <- as.factor(bcn$time.d)
bcn <- bcn[ ave(1:nrow(bcn), bcn$id, FUN=length) > 1 , ]
bcn$treated <- ifelse(bcn$review.d == 1,1,0)
bcn%>%
group_by(id, treated) %>%
summarize(n=n())  %>%
arrange(desc(id))
treated <- bcn$id[bcn$review.d==1]
bcn$test <- bcn$id %in% treated
bcn$treated <- ifelse(bcn$test=="TRUE" | bcn$treated == 1, 1,0)
bcn%>%
group_by(id, treated) %>%
summarize(n=n())  %>%
arrange(desc(id))
bcn%>%
group_by(time.d, treated) %>%
summarize(n=n())  %>%
arrange(desc(id))
bcn%>%
group_by(time.d, bcn$treated) %>%
summarize(n=n())  %>%
arrange(desc(id))
bcn$treat <- ifelse(bcn$test=="TRUE" | bcn$treated == 1, 1,0)
bcn%>%
group_by(time.d, treat) %>%
summarize(n=n())  %>%
arrange(desc(id))
bcn%>%
group_by(time.d, treat) %>%
summarize(n=n())  %>%
arrange(desc(n))
bcn %>%
group_by(treat) %>%
summarize(mean(review))
bcn %>%
group_by(treat) %>%
summarize(mean(number_of_reviews))
bcn %>%
group_by(treat, time.d) %>%
summarize(mean(number_of_reviews))
bcn %>%
group_by(treat, time.d) %>%
summarize(max(number_of_reviews))
bcn$did <- bcn$time.d * bcn$treat
didreg <- lm(Y ~ treat + time.d + did, data = bcn)
bcn$price <- as.numeric(gsub("\\$","",bcn$price))
bcn$accept_rate <- as.numeric(gsub("\\%","",bcn$host_acceptance_rate))
unique(bcn$neighbourhood_group_cleansed)
bcn$hood <- as.factor(bcn$neighbourhood_group_cleansed)
bcn %>%
group_by(neighbourhood_group_cleansed) %>%
summarise(avg_price = mean(price, na.rm=TRUE))  %>%
arrange(desc(avg_price))
bcn %>%
group_by(neighbourhood_group_cleansed) %>%
tally(sort = TRUE) # count observation by neighborhood
bcn$instant_bookable <-ifelse(bcn$instant_bookable=="t",1,0)
bcn$superhost<-ifelse(bcn$host_is_superhost=="t",1,0)
bcn$cleaning_fee <- as.numeric(gsub("\\$","",bcn$cleaning_fee))
bcn$cleaning_fee[is.na(bcn$cleaning_fee)]<-0
unique(bcn$cleaning_fee)
bcn$price_clean <- bcn$price + bcn$cleaning_fee
bcn$response_rate <- as.numeric(gsub("\\%","",bcn$host_response_rate))
bcn$date <- Sys.Date() #gen Variable with current date
bcn$host_since_new <- as.numeric(difftime(bcn$date, bcn$host_since, units = "d"))
ggplot(data=bcn, aes(host_since_new)) +
geom_histogram(binwidth = 10, col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(bcn$host_since_new, na.rm = TRUE)),
col="red", linetype="dashed", size =1) +
labs(title = "Histogramm Host Since") +
labs(x="Host Weeks", y="Count")
ggplot(data=bcn, aes(host_since_new)) +
geom_histogram(binwidth = 50, col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(bcn$host_since_new, na.rm = TRUE)),
col="red", linetype="dashed", size =1) +
labs(title = "Histogramm Host Since") +
labs(x="Host Days", y="Count")
bcn$room_type1 <- as.numeric(as.factor(bcn$room_type))
bcn$room_type1 <- as.numeric(as.factor(bcn$room_type))
bcn$hood.d <- as.numeric(bcn$hood)
bcn$log_pice = log10(bcn$price_clean)
ggplot(data=bcn, aes(review_scores_rating)) +
geom_histogram(breaks=seq(0,100, by=2), col="blue", fill="blue", alpha=.2) +
geom_vline(aes(xintercept=mean(bcn$review_scores_rating, na.rm = TRUE)),
col="red", linetype="dashed", size =1) +
labs(title = "Histogramm of Overall Rating") +
labs(x="Rating", y="Count")
bcn$price.cut <- cut(bcn$price, c(seq(0,200,1), Inf))
mu <- ddply(bcn, "review.f", summarise, grp.mean=mean(price, na.rm = TRUE))
head(mu)
ggplot(bcn, aes(x=as.numeric(price.cut), color=treat)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=treat),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
bcn$treat.f <- as.factor(bcn$treat)
ggplot(bcn, aes(x=as.numeric(price.cut), color=treat)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=bcn$treat),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
mu1 <- ddply(bcn, "review.f", summarise, grp.mean=mean(accept_rate, na.rm = TRUE))
head(mu1)
ggplot(bcn, aes(x=accept_rate, color=review.f)) +
geom_histogram(fill="white", position="dodge")+
geom_vline(data=mu1, aes(xintercept=grp.mean, color=review.f),
linetype="dashed")+
labs(title = "Histogramm of Acceptance rate") +
labs(x="Acceptance Rate", y="Count")
mu <- ddply(bcn, "treat", summarise, grp.mean=mean(price, na.rm = TRUE))
ggplot(bcn, aes(x=as.numeric(price.cut), color=treat)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=bcn$treat),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
bcn$price.cut <- cut(bcn$price, c(seq(0,200,1), Inf))
mu <- ddply(bcn, "treat", summarise, grp.mean=mean(price, na.rm = TRUE))
ggplot(bcn, aes(x=as.numeric(price.cut), color=treat)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=bcn$treat),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
ggplot(bcn, aes(x=as.numeric(price.cut), color=treat)) +
geom_histogram(binwidth = 5, fill="white", position="dodge")+
geom_vline(data=mu, aes(xintercept=grp.mean, color=treat),
linetype="dashed")+
labs(title = "Histogramm of Nightly Price") +
labs(x="Price", y="Count") +
scale_x_continuous(labels = c(seq(0,199,50), ">200"))
X1 <- cbind(bcn$review_scores_rating, bcn$superhost, bcn$host_since_new)
colnames(X1) <- c("Average Rating Score", "Superhost Badge", "host Since")
X2 <-cbind(bcn$accommodates, bcn$room_type1, bcn$hood.d)
colnames(X2) <- c("Number of Guests", "Room Type", "Neighborhood")
X3 <-cbind(bcn$instant_bookable, bcn$minimum_nights, bcn$response_rate, bcn$accept_rate)
colnames(X3) <- c("Instant Booking", "Minimum Stay", "Response Rate", "Acceptance Rate")
Y <- bcn$log_pice
Y1 <- bcn$price
DID <- cbind(bcn$treat, bcn$time.d, bcn$did)
colnames(DID) <- c("Treatment Group", "Time", "Interaction Term")
didreg <- lm(Y ~ DID + X1 + X2 + X3)
summary(didreg)
didreg <- lm(Y ~ DID)
summary(didreg)
didreg <- lm(Y ~ DID + X1)
summary(didreg)
didreg <- lm(Y ~ DID + X1 + X2)
summary(didreg)
X1 <- cbind(bcn$review_scores_rating, bcn$host_since_new)
colnames(X1) <- c("Average Rating Score", "host Since")
X2 <-cbind(bcn$accommodates, bcn$room_type1, bcn$hood.d)
didreg <- lm(Y ~ DID + X1 + X2)
summary(didreg)
Y <- bcn$accept_rate
didreg <- lm(Y ~ DID + X1 + X2)
summary(didreg)
X3 <-cbind(bcn$instant_bookable, bcn$minimum_nights)
colnames(X3) <- c("Instant Booking", "Minimum Stay")
X2 <-cbind(bcn$accommodates, bcn$room_type1, bcn$hood.d)
colnames(X2) <- c("Number of Guests", "Room Type", "Neighborhood")
X2 <-cbind(bcn$accommodates, bcn$room_type1, bcn$hood.d)
colnames(X2) <- c("Number of Guests", "Room Type", "Neighborhood")
X3 <-cbind(bcn$instant_bookable, bcn$minimum_nights)
colnames(X3) <- c("Instant Booking", "Minimum Stay")
didreg <- lm(Y ~ DID + X1 + X2 + X3)
summary(didreg)
didreg <- lm(Y ~ DID + X1 + X2)
summary(didreg)
library(readr)
social_media_DE_monthly_201501_201703 <- read_csv("~/Downloads/social_media-DE-monthly-201501-201703.csv")
View(social_media_DE_monthly_201501_201703)
rm(list =ls())
social_media <- read_csv("~/Downloads/social_media-DE-monthly-201501-201703.csv")
plot(social_media$Facebook)
plot(social_media$Facebook, type = "l")
plot(social_media$Pinterest, type = "l")
rm(list =ls())
social_media <- read_csv("~/Downloads/social_media-DE-daily-20090301-20170301.csv")
library(xts)
install.packages("xts")
library(xts)
social_media$Date <- as.Date(social_media$Date, format="%Y-%m-%d")
ts <- xts(social_media, order.by=social_media[,"Date"])
ts <- xts(social_media)
plot(social_media$Date, social_media$Pinterest, type = "l")
plot(social_media$Pinterest,social_media$Date, type = "l")
plot(social_media$Pinterest,type = "l")
plot(social_media$Facebook, type = "l")
ts.plot(social_media$Facebook, type = "l")
Date <- as.Date(social_media$Date, format="%Y-%m-%d")
ts <- xts(social_media, order.by = Date)
View(ts)
ts.plot(social_media$Facebook, type = "l")
if (!require("gplots")) {
install.packages("gplots", dependencies = TRUE)
library(gplots)
}
if (!require("lattice")) {
install.packages("lattice", dependencies = TRUE)
library(lattice)
}
library(gplots)
library(lattice)
library(R.matlab)
setwd('~/GD/hsu/paper/2sm/simulation')
qq <- readMat('qq.mat')
qq <- qq$qq
colnames(qq) <- c('0','.1','.2','.3','.4','.5','.6','.7','.8','.9','1')
row.names(qq)<-  c('0','.1','.2','.3','.4','.5','.6','.7','.8','.9','1')
qqdiag <- readMat('qqdiag.mat')
qqdiag <- qqdiag$qqdiag
colnames(qqdiag) <- c('0','.1','.2','.3','.4','.5','.6','.7','.8','.9','1')
row.names(qqdiag)<-  c('0','.2','.4','.6','.8','1','1.2','1.4','1.6','1.8','2')
print(levelplot(qqdiag,
col.regions=heat.colors,
xlab = "d+g",
ylab = "mu",
main = "Quantity Correlation"))
